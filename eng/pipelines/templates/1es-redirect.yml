resources:
  repositories:
    - repository: 1ESPipelineTemplates
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

parameters:
  - name: stages
    type: stageList
    default: []
  - name: variables
    type: object
    default: {}
  - name: Use1ESOfficial
    type: boolean
    default: true

extends:
  ${{ if and(parameters.Use1ESOfficial, eq(variables['System.TeamProject'], 'internal')) }}:
    template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  ${{ else }}:
    template: v1/1ES.Unofficial.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    settings:
      skipBuildTagsForGitHubPullRequests: true
    sdl:
      git:
        longpaths: true
      sourceAnalysisPool:
        name: azsdk-pool-mms-win-2022-general
        image: azsdk-pool-mms-win-2022-1espt
        os: windows
      psscriptanalyzer:
        compiled: true
        break: true
      eslint:
        enabled: false
        justificationForDisabling: "ESLint injected task has failures because it uses an old version of mkdirp. We should not fail for tools not controlled by the repo. See: https://dev.azure.com/azure-sdk/internal/_build/results?buildId=3556850"
    stages:
      - ${{ each stage in parameters.stages }}:
          - ${{ each pair in stage }}:
              ${{ if ne(pair.key, 'variables') }}:
                ${{ pair.key }}: ${{ pair.value }}
            variables:
              - template: /eng/pipelines/templates/variables/image.yml@self
              - ${{ each variable in parameters.variables }}:
                  - ${{ if eq(variable.key, 'template') }}:
                      - template: ${{ variable.value }}
                  - ${{ else }}:
                      - name: ${{ coalesce(variable.key, variable.name) }}
                        value: ${{ variable.value }}
              - ${{ each variable in stage.variables }}:
                  - ${{ if in(variable.key, 'template', 'group') }}:
                      - ${{ variable.key }}: ${{ variable.value }}
                  - ${{ else }}:
                      - name: ${{ coalesce(variable.key, variable.name) }}
                        value: ${{ variable.value }}
