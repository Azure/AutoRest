{
  "servers": [
    {
      "url": "/rbtest/api"
    }
  ],
  "openapi": "3.0.0",
  "info": {
    "version": "1.0",
    "title": "RequestBody Test v1",
    "description": "This is a testcase re: body and form params."
  },
  "paths": {
    "/v1/bodytest1": {
      "post": {
        "operationId": "bodyTest1",
        "summary": "Body parameter test 1",
        "description": "Body param is a referenced parameter.",
        "requestBody": {
          "description": "A referenced body parameter.",
          "required": true,
          "x-ms-requestBody-name": "body_param",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          },
          "x-alternate-name": "person",
          "x-test-property": true
        },
        "responses": {
          "201": {
            "description": "Successful request."
          },
          "400": {
            "description": "Invalid request."
          }
        }
      }
    },
    "/v1/bodytest2": {
      "post": {
        "operationId": "bodyTest2",
        "summary": "Body parameter test 2",
        "description": "Body param is normal inline parameter.",
        "requestBody": {
          "description": "The content of the new counterexample.",
          "required": true,
          "x-ms-requestBody-name": "body_param",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful request."
          },
          "400": {
            "description": "Invalid request."
          }
        }
      }
    },
    "/v1/formtest1": {
      "post": {
        "operationId": "formTest1",
        "summary": "Form parameter test 1",
        "description": "Form params are referenced parameters.",
        "requestBody": {
          "description": "A file transmitted via a mimepart within a multipart form.",
          "x-ms-requestBody-name": "form_part_1",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "form_part_1": {
                    "description": "A file transmitted via a mimepart within a multipart form.",
                    "type": "string",
                    "format": "binary",
                    "x-file-content-types": ["application/zip", "application/octet-stream"],
                    "x-include-filename": true,
                    "x-alternate-name": "filePart"
                  },
                  "form_part_2": {
                    "description": "A string transmitted via a mimepart within a multipart form.",
                    "type": "string",
                    "x-test-property": true,
                    "x-alternate-name": "stringPart"
                  }
                },
                "required": []
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful request."
          },
          "400": {
            "description": "Invalid request."
          }
        }
      }
    },
    "/v1/formtest2": {
      "post": {
        "operationId": "formTest2",
        "summary": "Form parameter test 2",
        "description": "Form params are defined inline.",
        "requestBody": {
          "description": "A file transmitted via a mimepart within a multipart form.",
          "x-ms-requestBody-name": "part_1",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "part_1": {
                    "description": "A file transmitted via a mimepart within a multipart form.",
                    "type": "string",
                    "format": "binary",
                    "x-file-content-types": ["application/gzip", "application/jpg"],
                    "x-include-filename": false,
                    "x-alternate-name": "filePart"
                  },
                  "part_2": {
                    "description": "A string within a multipart form.",
                    "type": "string",
                    "x-alternate-name": "stringPart"
                  }
                },
                "required": []
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful request."
          },
          "400": {
            "description": "Invalid request."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Person": {
        "properties": {
          "name": {
            "type": "string",
            "description": "The person's name."
          },
          "age": {
            "type": "integer",
            "description": "The person's age."
          }
        },
        "required": ["name", "age"],
        "x-test-property": "a value"
      }
    }
  }
}
