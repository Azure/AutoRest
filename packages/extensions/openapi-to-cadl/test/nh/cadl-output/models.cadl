import "@cadl-lang/rest";
import "@azure-tools/cadl-azure-core";


using Cadl.Rest;
using Azure.Core;


namespace NotificationHubsClient;



    enum MSApiVersionType {
        "2015-01", "2015-04", "2015-08", "2016-07"
    }

    enum NotificationHubContentModel_type {
        "application/xml"
    }

    enum NotificationHubDescriptionModel_xmlns:i {
        "http://www.w3.org/2001/XMLSchema-instance"
    }

    enum NotificationHubDescriptionModel_AuthorizationRules_item_i:type {
        "http://www.w3.org/2001/XMLSchema-instance"
    }

    enum NotificationHubDescriptionModel_AuthorizationRules_item_ClaimType {
        "SharedAccessAuthorizationRule"
    }

    enum RegistrationEntryModel_xmlns:m {
        "http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"
    }

    enum PlatformType {
        "apns", "wns", "gcm", "baidu", "adm"
    }

    enum InstallationPatchType {
        "add", "remove", "replace"
    }

    enum FormatParameterType {
        "apple", "baidu", "gcm", "windows"
    }

    enum RegistrationContentModel_type {
        "application/xml"
    }

    enum AppleRegistrationContentModel_xmlns:i {
        "http://www.w3.org/2001/XMLSchema-instance"
    }

    enum AppleTemplateRegistrationContentModel_xmlns:i {
        "http://www.w3.org/2001/XMLSchema-instance"
    }

    enum BaiduRegistrationContentModel_xmlns:i {
        "http://www.w3.org/2001/XMLSchema-instance"
    }

    enum BaiduTemplateRegistrationContentModel_xmlns:i {
        "http://www.w3.org/2001/XMLSchema-instance"
    }

    enum GcmRegistrationContentModel_xmlns:i {
        "http://www.w3.org/2001/XMLSchema-instance"
    }

    enum GcmTemplateRegistrationContentModel_xmlns:i {
        "http://www.w3.org/2001/XMLSchema-instance"
    }

    enum WindowsRegistrationContentModel_xmlns:i {
        "http://www.w3.org/2001/XMLSchema-instance"
    }

    enum WindowsTemplateRegistrationContentModel_xmlns:i {
        "http://www.w3.org/2001/XMLSchema-instance"
    }

    enum ApiVersionType {
        "2015-01", "2015-04", "2015-08", "2016-07", "2020-06"
    }
@Azure.Core.fixed
    enum ContentType {
        @doc("Content Type 'application/json;charset=utf-8'")"application/json;charset=utf-8", @doc("Content Type 'application/xml;charset=utf-8'")"application/xml;charset=utf-8"
    }




model NotificationHubEntryModel {
"content"?: NotificationHubContentModel;
}


model NotificationHubContentModel {
"type"?: NotificationHubContentModel_type;
"NotificationHubDescription"?: NotificationHubDescriptionModel;
}


model NotificationHubDescriptionModel {
"xmlns:i"?: NotificationHubDescriptionModel_xmlns:i;
"RegistrationTtl"?: string;
"Location"?: string;
"ApnsCredential"?: PropertyBagModelItem[];
"GcmCredential"?: PropertyBagModelItem[];
"WnsCredential"?: PropertyBagModelItem[];
"AuthorizationRules"?: NotificationHubDescriptionModel_AuthorizationRulesItem[];
}


model PropertyBagModelItem {
"Name"?: string;
"Value"?: string;
}


model NotificationHubDescriptionModel_AuthorizationRulesItem {
"i:type"?: NotificationHubDescriptionModel_AuthorizationRules_item_i:type;
"ClaimType"?: NotificationHubDescriptionModel_AuthorizationRules_item_ClaimType;
"ClaimValue"?: string;
"Rights"?: string[];
"CreatedTime"?: string;
"ModifiedTime"?: string;
"KeyName"?: string;
"PrimaryKey"?: string;
"SecondaryKey"?: string;
}


model RegistrationEntryModel {
"content"?: NotificationHubContentModel;
"xmlns:m"?: RegistrationEntryModel_xmlns:m;
"m:etag"?: string;
}


@resource("{hubName}/installations/{installationId}")
model InstallationModel {
@doc("Installation Unique Identifier")
// FIXME: (resource-key-guessing) - Verify that this property is the resource key, if not please update the model with the right one
@key
"installationId": string;
@doc("The user ID for the installation")
"userId"?: string;
@doc("The date when the installation was made inactivate by the PNS.")
@visibility("read")
"lastActiveOn"?: string;
@doc("Date in W3C format of last update to this installation.")
@visibility("read")
"lastUpdate"?: string;
@doc("PNS Platform for the installation")
"platform": PlatformType;
@doc("The unique device handle for the PNS.")
"pushChannel": string;
@doc("This is true if the PNS expired the channel.")
@visibility("read")
"expiredPushChannel"?: boolean;
@doc("The tags for the installation for targeting")
"tags"?: string[];
@doc("Set of named templates associated with the installation.")
"templates"?: Record<InstallationTemplateModel>;
@doc("""
Set of secondary tiles associated with the installation. Applies only to the
'wns' platform.
""")
"secondaryTiles"?: Record<InstallationSecondaryTileModel>;
}


model InstallationTemplateModel {
@doc("Template for the body of the notification.")
"body": string;
@doc("""
Set of named headers associated with the template. Header values can contain
template parameters.
""")
"headers"?: Record<string>;
@doc("Template expression evaluating in W3D date format.")
"expiry"?: string;
@doc("The tags for the installation for targeting")
"tags"?: string[];
}


model InstallationSecondaryTileModel {
@doc("ChannelUri for the secondary tile. Applies only to the 'wns' platform.")
"pushChannel": string;
@doc("The tags for the installation for targeting")
"tags"?: string[];
@doc("""
Set of named templates associated with the secondary tile. Applies only to the
'wns' platform.
""")
"templates"?: Record<InstallationTemplateModel>;
}


model InstallationPatchModelItem {
"op": InstallationPatchType;
"path": string;
"value"?: string;
}


model RegistrationContentModel {
"type"?: RegistrationContentModel_type;
"AppleRegistrationDescription"?: AppleRegistrationContentModel;
"AppleTemplateRegistrationDescription"?: AppleTemplateRegistrationContentModel;
"BaiduRegistrationDescription"?: BaiduRegistrationContentModel;
"BaiduTemplateRegistrationDescription"?: BaiduTemplateRegistrationContentModel;
"GcmRegistrationDescription"?: GcmRegistrationContentModel;
"GcmTemplateRegistrationDescription"?: GcmTemplateRegistrationContentModel;
"WindowsRegistrationDescription"?: WindowsRegistrationContentModel;
"WindowsTemplateRegistrationDescription"?: WindowsTemplateRegistrationContentModel;
}


model AppleRegistrationContentModel {
"xmlns:i"?: AppleRegistrationContentModel_xmlns:i;
"Tags"?: string;
"DeviceToken": string;
}


model AppleTemplateRegistrationContentModel {
"xmlns:i"?: AppleTemplateRegistrationContentModel_xmlns:i;
"Tags"?: string;
"DeviceToken": string;
"BodyTemplate": string;
"Expiry"?: string;
}


model BaiduRegistrationContentModel {
"xmlns:i"?: BaiduRegistrationContentModel_xmlns:i;
"Tags"?: string;
"BaiduUserId": string;
"BaiduChannelId": string;
}


model BaiduTemplateRegistrationContentModel {
"xmlns:i"?: BaiduTemplateRegistrationContentModel_xmlns:i;
"Tags"?: string;
"BaiduUserId": string;
"BaiduChannelId": string;
"BodyTemplate": string;
}


model GcmRegistrationContentModel {
"xmlns:i"?: GcmRegistrationContentModel_xmlns:i;
"Tags"?: string;
"GcmRegistrationId"?: string;
}


model GcmTemplateRegistrationContentModel {
"xmlns:i"?: GcmTemplateRegistrationContentModel_xmlns:i;
"Tags"?: string;
"GcmRegistrationId": string;
"BodyTemplate": string;
}


model WindowsRegistrationContentModel {
"xmlns:i"?: WindowsRegistrationContentModel_xmlns:i;
"Tags"?: string;
"ChannelUri": string;
}


model WindowsTemplateRegistrationContentModel {
"xmlns:i"?: WindowsTemplateRegistrationContentModel_xmlns:i;
"Tags"?: string;
"ChannelUri": string;
"BodyTemplate": string;
"WnsHeaders"?: WindowsTemplateRegistrationContentModel_WnsHeadersItem[];
}


model WindowsTemplateRegistrationContentModel_WnsHeadersItem {
"Header"?: string;
"Value"?: string;
}