// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Compute
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for VirtualMachineScaleSets.
    /// </summary>
    public static partial class VirtualMachineScaleSetsExtensions
    {
            /// <summary>
            /// Create or update a VM scale set.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set to create or update.
            /// </param>
            /// <param name='parameters'>
            /// The scale set object.
            /// </param>
            public static VirtualMachineScaleSet CreateOrUpdate(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, VirtualMachineScaleSet parameters)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, vmScaleSetName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update a VM scale set.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set to create or update.
            /// </param>
            /// <param name='parameters'>
            /// The scale set object.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<VirtualMachineScaleSet> CreateOrUpdateAsync(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, VirtualMachineScaleSet parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, vmScaleSetName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a VM scale set.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            public static OperationStatusResponse Delete(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName)
            {
                return operations.DeleteAsync(resourceGroupName, vmScaleSetName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a VM scale set.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OperationStatusResponse> DeleteAsync(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteWithHttpMessagesAsync(resourceGroupName, vmScaleSetName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Display information about a virtual machine scale set.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            public static VirtualMachineScaleSet Get(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName)
            {
                return operations.GetAsync(resourceGroupName, vmScaleSetName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Display information about a virtual machine scale set.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<VirtualMachineScaleSet> GetAsync(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, vmScaleSetName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deallocates specific virtual machines in a VM scale set. Shuts down the
            /// virtual machines and releases the compute resources. You are not billed for
            /// the compute resources that this virtual machine scale set deallocates.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='vmInstanceIDs'>
            /// A list of virtual machine instance IDs from the VM scale set.
            /// </param>
            public static OperationStatusResponse Deallocate(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs = default(VirtualMachineScaleSetVMInstanceIDs))
            {
                return operations.DeallocateAsync(resourceGroupName, vmScaleSetName, vmInstanceIDs).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deallocates specific virtual machines in a VM scale set. Shuts down the
            /// virtual machines and releases the compute resources. You are not billed for
            /// the compute resources that this virtual machine scale set deallocates.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='vmInstanceIDs'>
            /// A list of virtual machine instance IDs from the VM scale set.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OperationStatusResponse> DeallocateAsync(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs = default(VirtualMachineScaleSetVMInstanceIDs), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeallocateWithHttpMessagesAsync(resourceGroupName, vmScaleSetName, vmInstanceIDs, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes virtual machines in a VM scale set.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='vmInstanceIDs'>
            /// A list of virtual machine instance IDs from the VM scale set.
            /// </param>
            public static OperationStatusResponse DeleteInstances(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, VirtualMachineScaleSetVMInstanceRequiredIDs vmInstanceIDs)
            {
                return operations.DeleteInstancesAsync(resourceGroupName, vmScaleSetName, vmInstanceIDs).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes virtual machines in a VM scale set.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='vmInstanceIDs'>
            /// A list of virtual machine instance IDs from the VM scale set.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OperationStatusResponse> DeleteInstancesAsync(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, VirtualMachineScaleSetVMInstanceRequiredIDs vmInstanceIDs, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteInstancesWithHttpMessagesAsync(resourceGroupName, vmScaleSetName, vmInstanceIDs, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the status of a VM scale set instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            public static VirtualMachineScaleSetInstanceView GetInstanceView(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName)
            {
                return operations.GetInstanceViewAsync(resourceGroupName, vmScaleSetName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the status of a VM scale set instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<VirtualMachineScaleSetInstanceView> GetInstanceViewAsync(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetInstanceViewWithHttpMessagesAsync(resourceGroupName, vmScaleSetName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a list of all VM scale sets under a resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            public static VirtualMachineScaleSetListResult List(this IVirtualMachineScaleSets operations, string resourceGroupName)
            {
                return operations.ListAsync(resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a list of all VM scale sets under a resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<VirtualMachineScaleSetListResult> ListAsync(this IVirtualMachineScaleSets operations, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a list of all VM Scale Sets in the subscription, regardless of the
            /// associated resource group. Use nextLink property in the response to get the
            /// next page of VM Scale Sets. Do this till nextLink is not null to fetch all
            /// the VM Scale Sets.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static VirtualMachineScaleSetListWithLinkResult ListAll(this IVirtualMachineScaleSets operations)
            {
                return operations.ListAllAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a list of all VM Scale Sets in the subscription, regardless of the
            /// associated resource group. Use nextLink property in the response to get the
            /// next page of VM Scale Sets. Do this till nextLink is not null to fetch all
            /// the VM Scale Sets.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<VirtualMachineScaleSetListWithLinkResult> ListAllAsync(this IVirtualMachineScaleSets operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListAllWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets a list of SKUs available for your VM scale set, including the minimum
            /// and maximum VM instances allowed for each SKU.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            public static VirtualMachineScaleSetListSkusResult ListSkus(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName)
            {
                return operations.ListSkusAsync(resourceGroupName, vmScaleSetName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a list of SKUs available for your VM scale set, including the minimum
            /// and maximum VM instances allowed for each SKU.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<VirtualMachineScaleSetListSkusResult> ListSkusAsync(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListSkusWithHttpMessagesAsync(resourceGroupName, vmScaleSetName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Power off (stop) one or more virtual machines in a VM scale set. Note that
            /// resources are still attached and you are getting charged for the resources.
            /// Instead, use deallocate to release resources and avoid charges.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='vmInstanceIDs'>
            /// A list of virtual machine instance IDs from the VM scale set.
            /// </param>
            public static OperationStatusResponse PowerOff(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs = default(VirtualMachineScaleSetVMInstanceIDs))
            {
                return operations.PowerOffAsync(resourceGroupName, vmScaleSetName, vmInstanceIDs).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Power off (stop) one or more virtual machines in a VM scale set. Note that
            /// resources are still attached and you are getting charged for the resources.
            /// Instead, use deallocate to release resources and avoid charges.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='vmInstanceIDs'>
            /// A list of virtual machine instance IDs from the VM scale set.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OperationStatusResponse> PowerOffAsync(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs = default(VirtualMachineScaleSetVMInstanceIDs), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PowerOffWithHttpMessagesAsync(resourceGroupName, vmScaleSetName, vmInstanceIDs, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Restarts one or more virtual machines in a VM scale set.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='vmInstanceIDs'>
            /// A list of virtual machine instance IDs from the VM scale set.
            /// </param>
            public static OperationStatusResponse Restart(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs = default(VirtualMachineScaleSetVMInstanceIDs))
            {
                return operations.RestartAsync(resourceGroupName, vmScaleSetName, vmInstanceIDs).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Restarts one or more virtual machines in a VM scale set.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='vmInstanceIDs'>
            /// A list of virtual machine instance IDs from the VM scale set.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OperationStatusResponse> RestartAsync(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs = default(VirtualMachineScaleSetVMInstanceIDs), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.RestartWithHttpMessagesAsync(resourceGroupName, vmScaleSetName, vmInstanceIDs, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Starts one or more virtual machines in a VM scale set.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='vmInstanceIDs'>
            /// A list of virtual machine instance IDs from the VM scale set.
            /// </param>
            public static OperationStatusResponse Start(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs = default(VirtualMachineScaleSetVMInstanceIDs))
            {
                return operations.StartAsync(resourceGroupName, vmScaleSetName, vmInstanceIDs).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Starts one or more virtual machines in a VM scale set.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='vmInstanceIDs'>
            /// A list of virtual machine instance IDs from the VM scale set.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OperationStatusResponse> StartAsync(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs = default(VirtualMachineScaleSetVMInstanceIDs), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.StartWithHttpMessagesAsync(resourceGroupName, vmScaleSetName, vmInstanceIDs, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Upgrades one or more virtual machines to the latest SKU set in the VM scale
            /// set model.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='vmInstanceIDs'>
            /// A list of virtual machine instance IDs from the VM scale set.
            /// </param>
            public static OperationStatusResponse UpdateInstances(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, VirtualMachineScaleSetVMInstanceRequiredIDs vmInstanceIDs)
            {
                return operations.UpdateInstancesAsync(resourceGroupName, vmScaleSetName, vmInstanceIDs).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Upgrades one or more virtual machines to the latest SKU set in the VM scale
            /// set model.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='vmInstanceIDs'>
            /// A list of virtual machine instance IDs from the VM scale set.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OperationStatusResponse> UpdateInstancesAsync(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, VirtualMachineScaleSetVMInstanceRequiredIDs vmInstanceIDs, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateInstancesWithHttpMessagesAsync(resourceGroupName, vmScaleSetName, vmInstanceIDs, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Reimages (upgrade the operating system) one or more virtual machines in a
            /// VM scale set.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='vmInstanceIDs'>
            /// A list of virtual machine instance IDs from the VM scale set.
            /// </param>
            public static OperationStatusResponse Reimage(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs = default(VirtualMachineScaleSetVMInstanceIDs))
            {
                return operations.ReimageAsync(resourceGroupName, vmScaleSetName, vmInstanceIDs).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Reimages (upgrade the operating system) one or more virtual machines in a
            /// VM scale set.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='vmInstanceIDs'>
            /// A list of virtual machine instance IDs from the VM scale set.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OperationStatusResponse> ReimageAsync(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs = default(VirtualMachineScaleSetVMInstanceIDs), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ReimageWithHttpMessagesAsync(resourceGroupName, vmScaleSetName, vmInstanceIDs, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Reimages all the disks ( including data disks ) in the virtual machines in
            /// a VM scale set. This operation is only supported for managed disks.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='vmInstanceIDs'>
            /// A list of virtual machine instance IDs from the VM scale set.
            /// </param>
            public static OperationStatusResponse ReimageAll(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs = default(VirtualMachineScaleSetVMInstanceIDs))
            {
                return operations.ReimageAllAsync(resourceGroupName, vmScaleSetName, vmInstanceIDs).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Reimages all the disks ( including data disks ) in the virtual machines in
            /// a VM scale set. This operation is only supported for managed disks.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='vmScaleSetName'>
            /// The name of the VM scale set.
            /// </param>
            /// <param name='vmInstanceIDs'>
            /// A list of virtual machine instance IDs from the VM scale set.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OperationStatusResponse> ReimageAllAsync(this IVirtualMachineScaleSets operations, string resourceGroupName, string vmScaleSetName, VirtualMachineScaleSetVMInstanceIDs vmInstanceIDs = default(VirtualMachineScaleSetVMInstanceIDs), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ReimageAllWithHttpMessagesAsync(resourceGroupName, vmScaleSetName, vmInstanceIDs, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
