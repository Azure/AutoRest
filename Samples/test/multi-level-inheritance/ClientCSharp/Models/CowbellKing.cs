// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Inheritance.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An honorable cowbell.
    /// </summary>
    public partial class CowbellKing : Cowbell
    {
        /// <summary>
        /// Initializes a new instance of the CowbellKing class.
        /// </summary>
        public CowbellKing()
        {
            Ssn = new SecureString();
            XboxLiveCredentials = new SecureString();
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CowbellKing class.
        /// </summary>
        public CowbellKing(string name, SecureString ssn, string hobby, SecureString xboxLiveCredentials, string title, string nickname = default(string), SecureString favoritePassword = default(SecureString), CowbellBase mentor = default(CowbellBase), double? throneSize = default(double?))
            : base(name, ssn, hobby, xboxLiveCredentials, nickname, favoritePassword, mentor)
        {
            Ssn = new SecureString();
            XboxLiveCredentials = new SecureString();
            ThroneSize = throneSize;
            Title = title;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "throneSize")]
        public double? ThroneSize { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (Title == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Title");
            }
        }
    }
}
