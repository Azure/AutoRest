/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package storage.models;

import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * The parameters to provide for the account.
 */
@JsonFlatten
public class StorageAccountCreateParameters {
    /**
     * The location of the resource. This will be one of the supported and
     * registered Azure Geo Regions (e.g. West US, East US, Southeast Asia,
     * etc.). The geo region of a resource cannot be changed once it is
     * created, but if an identical geo region is specified on update, the
     * request will succeed.
     */
    @JsonProperty(value = "location", required = true)
    private String location;

    /**
     * A list of key value pairs that describe the resource. These tags can be
     * used for viewing and grouping this resource (across resource groups). A
     * maximum of 15 tags can be provided for a resource. Each tag must have a
     * key with a length no greater than 128 characters and a value with a
     * length no greater than 256 characters.
     */
    @JsonProperty(value = "tags")
    private Map<String, String> tags;

    /**
     * The sku name. Required for account creation; optional for update. Note
     * that in older versions, sku name was called accountType. Possible values
     * include: 'Standard_LRS', 'Standard_ZRS', 'Standard_GRS',
     * 'Standard_RAGRS', 'Premium_LRS'.
     */
    @JsonProperty(value = "properties.accountType", required = true)
    private AccountType accountType;

    /**
     * Get the location value.
     *
     * @return the location value
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location value.
     *
     * @param location the location value to set
     * @return the StorageAccountCreateParameters object itself.
     */
    public StorageAccountCreateParameters withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the tags value.
     *
     * @return the tags value
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags value.
     *
     * @param tags the tags value to set
     * @return the StorageAccountCreateParameters object itself.
     */
    public StorageAccountCreateParameters withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the accountType value.
     *
     * @return the accountType value
     */
    public AccountType accountType() {
        return this.accountType;
    }

    /**
     * Set the accountType value.
     *
     * @param accountType the accountType value to set
     * @return the StorageAccountCreateParameters object itself.
     */
    public StorageAccountCreateParameters withAccountType(AccountType accountType) {
        this.accountType = accountType;
        return this;
    }

}
