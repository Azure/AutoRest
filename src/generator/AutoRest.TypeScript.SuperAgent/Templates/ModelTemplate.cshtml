@using System.Linq
@using System.Net
@using AutoRest.Core.Utilities
@using AutoRest.TypeScript.SuperAgent.Model
@inherits AutoRest.Core.Template<CodeModelTs>

// API version: @Model.ApiVersion
// Generated by: @Model.GeneratedBy at @Model.GeneratedAt
// Tool version: @Model.GeneratorVersion

abstract class RequestBase {
    abstract validate();
}

@foreach (var model in Model.ModelTypes)
{
@:export class @(model.Name)Response {
    foreach (var property in model.Properties)
    {
@:    @(property.Name.ToCamelCase()) : @(property.ModelTypeName.ToCamelCase());
    }
@:}
@:
}

@foreach (var method in Model.Methods.Where(method => method.Responses.ContainsKey(HttpStatusCode.OK)))
{
@:export class @(method.Responses[HttpStatusCode.OK].Body.ClassName)Request extends RequestBase {
    foreach (var p in method.Parameters)
    {
@:    @(p.Name.Value.ToCamelCase()) : @(p.ModelTypeName.ToCamelCase());
    }

@:    public validate(){
    foreach (var p in method.Parameters.Where(p => p.IsRequired))
    {
@:        if(this.@(p.Name.Value.ToCamelCase()) === null){
@:            throw new Error("Missing required property value: @(p.Name.Value.ToCamelCase())");
@:        }
    }
@:    }
@:}
}



