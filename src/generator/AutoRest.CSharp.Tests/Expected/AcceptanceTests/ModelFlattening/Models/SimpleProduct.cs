// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Fixtures.AcceptanceTestsModelFlattening.Models
{
    using System.Linq;

    /// <summary>
    /// The product documentation.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class SimpleProduct : BaseProduct
    {
        /// <summary>
        /// Initializes a new instance of the SimpleProduct class.
        /// </summary>
        public SimpleProduct() { }

        /// <summary>
        /// Initializes a new instance of the SimpleProduct class.
        /// </summary>
        /// <param name="productId">Unique identifier representing a specific
        /// product for a given latitude & longitude. For example, uberX in
        /// San Francisco will have a different product_id than uberX in Los
        /// Angeles.</param>
        /// <param name="maxProductDisplayName">Display name of
        /// product.</param>
        /// <param name="description">Description of product.</param>
        /// <param name="genericValue">Generic URL value.</param>
        /// <param name="odatavalue">URL value.</param>
        public SimpleProduct(System.String productId, System.String maxProductDisplayName, System.String description = default(System.String), System.String genericValue = default(System.String), System.String odatavalue = default(System.String))
            : base(productId, description)
        {
            MaxProductDisplayName = maxProductDisplayName;
            GenericValue = genericValue;
            Odatavalue = odatavalue;
        }
        /// <summary>
        /// Static constructor for SimpleProduct class.
        /// </summary>
        static SimpleProduct()
        {
            Capacity = "Large";
        }

        /// <summary>
        /// Gets or sets display name of product.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "details.max_product_display_name")]
        public System.String MaxProductDisplayName { get; set; }

        /// <summary>
        /// Gets or sets generic URL value.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "details.max_product_image.generic_value")]
        public System.String GenericValue { get; set; }

        /// <summary>
        /// Gets or sets URL value.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "details.max_product_image.@odata\\.value")]
        public System.String Odatavalue { get; set; }

        /// <summary>
        /// Capacity of product. For example, 4 people.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "details.max_product_capacity")]
        public static System.String Capacity { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (MaxProductDisplayName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "MaxProductDisplayName");
            }
        }
    }
}
