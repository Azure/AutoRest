/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package fixtures.bodycomplex.implementation;

import fixtures.bodycomplex.AutoRestComplexTestService;
import fixtures.bodycomplex.Basics;
import fixtures.bodycomplex.Primitives;
import fixtures.bodycomplex.Arrays;
import fixtures.bodycomplex.Dictionarys;
import fixtures.bodycomplex.Inheritances;
import fixtures.bodycomplex.Polymorphisms;
import fixtures.bodycomplex.Polymorphicrecursives;
import fixtures.bodycomplex.Readonlypropertys;
import com.microsoft.rest.ServiceClient;
import com.microsoft.rest.RestClient;

/**
 * Initializes a new instance of the AutoRestComplexTestService class.
 */
public final class AutoRestComplexTestServiceImpl extends ServiceClient implements AutoRestComplexTestService {

    /** API ID. */
    private String apiVersion;

    /**
     * Gets API ID.
     *
     * @return the apiVersion value.
     */
    public String apiVersion() {
        return this.apiVersion;
    }

    /**
     * Sets API ID.
     *
     * @param apiVersion the apiVersion value.
     */
    public void setApiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
    }

    /**
     * Gets the Basics object to access its operations.
     * @return the Basics object.
     */
    public Basics basics() {
        return new BasicsImpl(restClient().retrofit(), this);
    }

    /**
     * Gets the Primitives object to access its operations.
     * @return the Primitives object.
     */
    public Primitives primitives() {
        return new PrimitivesImpl(restClient().retrofit(), this);
    }

    /**
     * Gets the Arrays object to access its operations.
     * @return the Arrays object.
     */
    public Arrays arrays() {
        return new ArraysImpl(restClient().retrofit(), this);
    }

    /**
     * Gets the Dictionarys object to access its operations.
     * @return the Dictionarys object.
     */
    public Dictionarys dictionarys() {
        return new DictionarysImpl(restClient().retrofit(), this);
    }

    /**
     * Gets the Inheritances object to access its operations.
     * @return the Inheritances object.
     */
    public Inheritances inheritances() {
        return new InheritancesImpl(restClient().retrofit(), this);
    }

    /**
     * Gets the Polymorphisms object to access its operations.
     * @return the Polymorphisms object.
     */
    public Polymorphisms polymorphisms() {
        return new PolymorphismsImpl(restClient().retrofit(), this);
    }

    /**
     * Gets the Polymorphicrecursives object to access its operations.
     * @return the Polymorphicrecursives object.
     */
    public Polymorphicrecursives polymorphicrecursives() {
        return new PolymorphicrecursivesImpl(restClient().retrofit(), this);
    }

    /**
     * Gets the Readonlypropertys object to access its operations.
     * @return the Readonlypropertys object.
     */
    public Readonlypropertys readonlypropertys() {
        return new ReadonlypropertysImpl(restClient().retrofit(), this);
    }

    /**
     * Initializes an instance of AutoRestComplexTestService client.
     */
    public AutoRestComplexTestServiceImpl() {
        this("http://localhost");
    }

    /**
     * Initializes an instance of AutoRestComplexTestService client.
     *
     * @param baseUrl the base URL of the host
     */
    public AutoRestComplexTestServiceImpl(String baseUrl) {
        super(baseUrl);
    }

    /**
     * Initializes an instance of AutoRestComplexTestService client.
     *
     * @param restClient the pre-configured {@link RestClient} object
     */
    public AutoRestComplexTestServiceImpl(RestClient restClient) {
        super(restClient);
    }
}
