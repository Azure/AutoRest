@using Microsoft.Rest.Generator.NodeJS
@using Microsoft.Rest.Generator.NodeJS.Templates
@using System.Linq;
@inherits Microsoft.Rest.Generator.Template<Microsoft.Rest.Generator.NodeJS.MethodGroupTemplateModel>
/*
@Header(" * ")
 */
@EmptyLine
// After TypeScript 1.6 launches this can be simplified to use node module loading
import { ServiceClientOptions, RequestOptions, HttpOperationResponse } from "node_modules/ms-rest/lib/msRest";
@if (Model.ModelTypes.Any())
{
@EmptyLine
@:import * as models from "../models/index";
}
@EmptyLine
declare class @(Model.MethodGroupType) {
    /**
     * @@class
     * @Model.MethodGroupType
     * __NOTE__: An instance of this class is automatically created for an
     * instance of the @Model.Name.
     * Initializes a new instance of the @Model.MethodGroupType class.
     * @@constructor
     *
     * @@param {@Model.Name} client Reference to the service client.
     */
    constructor(client);

    @EmptyLine
    @foreach (var method in Model.MethodTemplateModels)
    {
    @:@(Include(new MethodTemplateTS(), method))
    @EmptyLine
    }
}
@EmptyLine
export default @(Model.MethodGroupType);
