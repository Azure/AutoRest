# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource import Resource


class StorageAccountCreateParameters(Resource):
    """
    The parameters to provide for the account.

    :param id: Resource Id
    :type id: str
    :param name: Resource name
    :type name: str
    :param type: Resource type
    :type type: str
    :param location: Resource location
    :type location: str
    :param tags: Resource tags
    :type tags: dict
    :param account_type: Gets or sets the account type. Possible values
     include: 'Standard_LRS', 'Standard_ZRS', 'Standard_GRS',
     'Standard_RAGRS', 'Premium_LRS'
    :type account_type: str
    """ 

    _validation = {
        '_id': {'readonly': True},
        '_name': {'readonly': True},
        '_type': {'readonly': True},
        'location': {'required': True},
    }

    _attribute_map = {
        '_id': {'key': 'id', 'type': 'str'},
        '_name': {'key': 'name', 'type': 'str'},
        '_type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'account_type': {'key': 'properties.accountType', 'type': 'AccountType'},
    }

    def __init__(self, location, tags=None, account_type=None):
        super(StorageAccountCreateParameters, self).__init__(location=location, tags=tags)
        self.account_type = account_type
